#! /bin/bash

if source $HOME/.wksconfig > /dev/null 2>&1 ; then
  echo # ok, variable sourced
else
  echo "WKS_PREFIX=1" > $HOME/.wksconfig
  WKS_PREFIX=1
fi

if [[ -z $1 ]]; then
  echo "Missing workspace number";
  exit 1;
else
  workspace=$1
fi

case "$workspace" in
  "next")
    wks=$(hyprctl activeworkspace -j | jq '.id')
    max_wks=$(( $(( $WKS_PREFIX + 1 )) * 10 ))
    workspace=$(($wks + 1))
  ;;

  "prev")
    wks=$(hyprctl activeworkspace -j | jq '.id')
    wks_min=$(($WKS_PREFIX * 10 + 1))
    workspace=$(($wks - 1))
  ;;

  *)
   workspace="${WKS_PREFIX}${workspace}"
  ;;
esac

workspace_number_parsed=$(("10#$workspace"));
# get the monitor name where target workspace is focused, if its empty do not swap
monitor_with_desiered_workspace=$(hyprctl monitors -j | jq --arg num "$workspace_number_parsed" 'map(select(.focused == false and .activeWorkspace.name == $num)) | .[] | .name')

mon=$(hyprctl monitors -j | jq '.[] | select(.focused == true) | .name')
activemonitor=${mon//\"/}

if [[ ${#monitor_with_desiered_workspace} -ne 0 ]]; then
  hyprctl dispatch swapactiveworkspaces ${monitor_with_desiered_workspace//\"/} $activemonitor > /dev/null
else
  hyprctl dispatch moveworkspacetomonitor $workspace_number_parsed $activemonitor  > /dev/null 2>&1 && hyprctl dispatch workspace $workspace_number_parsed > /dev/null
fi

exit 0

